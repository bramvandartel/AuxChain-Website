const bytecode = '';

function getTransactionReceipt(txHash) {
    return window.ethereum.request({
        method: 'eth_getTransactionReceipt', params:
            [txHash]
    });
}

async function listAuction(add_url, view_url) {
    $('#submit').replaceWith('<button id="submit" class="btn btn-primary" type="button" disabled><span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>Opening Metamask...</button>')
    const web3 = new Web3(window.ethereum);
    const startingPrice = $('#price').val();
    const title = $('#title').val();
    const description = $('#description').val();
    const duration = $('#duration').val() * 3600;
    const buyerDeposit = $('#buyerDeposit').val();
    const sellerDeposit = $('#sellerDeposit').val();
    const imageURL = $('#imageURL').val();
    console.log(sellerDeposit);
    console.log(web3.utils.toHex(sellerDeposit));
    const parameters = web3.eth.abi.encodeParameters(['uint256', 'string', 'string', 'uint256', 'uint256', 'string'], [startingPrice, title, description, duration, buyerDeposit, imageURL]);
    const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});
    const account = accounts[0];
    $('#submit').replaceWith('<button id="submit" class="btn btn-primary" type="button" disabled><span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>Waiting for confirmation in Metamask...</button>')
    const createTransaction = window.ethereum.request({
        method: 'eth_sendTransaction', params:
            [{
                from: account,
                data: bytecode + parameters.replace('0x', ''),
                value: web3.utils.toHex(sellerDeposit),
            }]
    }).then(async (result) => {
        $('#submit').replaceWith('<button id="submit" class="btn btn-primary" type="button" disabled><span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>Waiting for transaction to be verified...</button>');
        const ITERATIONS = 30;

        i = 0;
        while (i < ITERATIONS) {
            i++;
            await new Promise(r => setTimeout(r, 2000));
            var receipt = await getTransactionReceipt(result);
            if (receipt !== null) {
                break;
            }
        }
        if (receipt === null) {
            $('#submit').replaceWith('<button id="submit" class="btn btn-danger" type="button" disabled>Error: Check your wallet</button>');
            return;
        }
        $('#submit').replaceWith('<button id="submit" class="btn btn-primary" type="button" disabled><span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>Loading confirmation..</button>');
        contractAddress = receipt.contractAddress;
        $.ajax({
            url: add_url.replace('0', contractAddress),
            type: 'GET',
            success: async function (result) {
                if (result === "ok") {
                    location.href = view_url.replace('0', contractAddress);
                } else {
                    $('#submit').replaceWith('<button id="submit" class="btn btn-danger" type="button" disabled>Error: Could not load auction. Check your wallet?</button>');
                }
            }
        });
    }).catch(async (error) => {
        $('#submit').replaceWith('<div id="submit"><button class="btn btn-danger" type="button" disabled>Error: Something went wrong in your Metamask.</button></div>');
        await new Promise(r => setTimeout(r, 5000));
        $('#submit').replaceWith('<button type="submit" class="btn btn-primary" id="submit">Try again</button>');
    });
}
